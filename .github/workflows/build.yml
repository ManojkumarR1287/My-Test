name: CI
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - uses: actions/checkout@v2

      # Check Docker version and info
      - name: Check Docker Installation
        run: |
          docker --version
          docker info
      - name: Test Docker Image Interactively
        run: |
          docker run -it --rm kivy/buildozer:4.0.0 /bin/bash
          
      # Check if Docker image can be pulled
      - name: Pull Docker Image
        run: |
          docker pull kivy/buildozer:4.0.0 || docker pull kivy/buildozer:latest
  

      # Cache Buildozer global directory
      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      # Cache Buildozer local directory
      - uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      # Run Docker interactively to check dependencies
      - name: Test Docker Image Interactively
        run: |
          docker run -it --rm kivy/buildozer:4.0.0 /bin/bash

      # Build with Buildozer (via Docker)
      - name: Build with Buildozer (via Docker)
        run: |
          docker run -i --rm \
          -v /home/runner/work/${{ github.repository }}:/home/user/hostcwd \
          -w /home/user/hostcwd \
          kivy/buildozer:4.0.0 \
          buildozer android debug

      # Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk-package
          path: bin/*.apk # Adjust the path if your APK is located elsewhere
